-- ==============================================================
-- Generated by Vitis HLS v2025.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sha384Accel_sha384Accel_Pipeline_VITIS_LOOP_38_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    buffer_31_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_31_ce0 : OUT STD_LOGIC;
    buffer_31_we0 : OUT STD_LOGIC;
    buffer_31_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_30_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_30_ce0 : OUT STD_LOGIC;
    buffer_30_we0 : OUT STD_LOGIC;
    buffer_30_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_29_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_29_ce0 : OUT STD_LOGIC;
    buffer_29_we0 : OUT STD_LOGIC;
    buffer_29_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_28_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_28_ce0 : OUT STD_LOGIC;
    buffer_28_we0 : OUT STD_LOGIC;
    buffer_28_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_27_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_27_ce0 : OUT STD_LOGIC;
    buffer_27_we0 : OUT STD_LOGIC;
    buffer_27_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_26_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_26_ce0 : OUT STD_LOGIC;
    buffer_26_we0 : OUT STD_LOGIC;
    buffer_26_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_25_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_25_ce0 : OUT STD_LOGIC;
    buffer_25_we0 : OUT STD_LOGIC;
    buffer_25_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_24_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_24_ce0 : OUT STD_LOGIC;
    buffer_24_we0 : OUT STD_LOGIC;
    buffer_24_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_23_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_23_ce0 : OUT STD_LOGIC;
    buffer_23_we0 : OUT STD_LOGIC;
    buffer_23_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_22_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_22_ce0 : OUT STD_LOGIC;
    buffer_22_we0 : OUT STD_LOGIC;
    buffer_22_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_21_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_21_ce0 : OUT STD_LOGIC;
    buffer_21_we0 : OUT STD_LOGIC;
    buffer_21_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_20_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_20_ce0 : OUT STD_LOGIC;
    buffer_20_we0 : OUT STD_LOGIC;
    buffer_20_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_19_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_19_ce0 : OUT STD_LOGIC;
    buffer_19_we0 : OUT STD_LOGIC;
    buffer_19_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_18_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_18_ce0 : OUT STD_LOGIC;
    buffer_18_we0 : OUT STD_LOGIC;
    buffer_18_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_17_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_17_ce0 : OUT STD_LOGIC;
    buffer_17_we0 : OUT STD_LOGIC;
    buffer_17_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_16_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_16_ce0 : OUT STD_LOGIC;
    buffer_16_we0 : OUT STD_LOGIC;
    buffer_16_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_15_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_15_ce0 : OUT STD_LOGIC;
    buffer_15_we0 : OUT STD_LOGIC;
    buffer_15_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_14_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_14_ce0 : OUT STD_LOGIC;
    buffer_14_we0 : OUT STD_LOGIC;
    buffer_14_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_13_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_13_ce0 : OUT STD_LOGIC;
    buffer_13_we0 : OUT STD_LOGIC;
    buffer_13_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_12_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_12_ce0 : OUT STD_LOGIC;
    buffer_12_we0 : OUT STD_LOGIC;
    buffer_12_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_11_ce0 : OUT STD_LOGIC;
    buffer_11_we0 : OUT STD_LOGIC;
    buffer_11_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_10_ce0 : OUT STD_LOGIC;
    buffer_10_we0 : OUT STD_LOGIC;
    buffer_10_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_9_ce0 : OUT STD_LOGIC;
    buffer_9_we0 : OUT STD_LOGIC;
    buffer_9_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_8_ce0 : OUT STD_LOGIC;
    buffer_8_we0 : OUT STD_LOGIC;
    buffer_8_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_7_ce0 : OUT STD_LOGIC;
    buffer_7_we0 : OUT STD_LOGIC;
    buffer_7_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_6_ce0 : OUT STD_LOGIC;
    buffer_6_we0 : OUT STD_LOGIC;
    buffer_6_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_5_ce0 : OUT STD_LOGIC;
    buffer_5_we0 : OUT STD_LOGIC;
    buffer_5_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_4_ce0 : OUT STD_LOGIC;
    buffer_4_we0 : OUT STD_LOGIC;
    buffer_4_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_3_ce0 : OUT STD_LOGIC;
    buffer_3_we0 : OUT STD_LOGIC;
    buffer_3_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_2_ce0 : OUT STD_LOGIC;
    buffer_2_we0 : OUT STD_LOGIC;
    buffer_2_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_1_ce0 : OUT STD_LOGIC;
    buffer_1_we0 : OUT STD_LOGIC;
    buffer_1_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    buffer_r_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    buffer_r_ce0 : OUT STD_LOGIC;
    buffer_r_we0 : OUT STD_LOGIC;
    buffer_r_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    size : IN STD_LOGIC_VECTOR (127 downto 0) );
end;


architecture behav of sha384Accel_sha384Accel_Pipeline_VITIS_LOOP_38_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv11_380 : STD_LOGIC_VECTOR (10 downto 0) := "01110000000";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln38_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal zext_ln37_fu_642_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sizeIndex_fu_168 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal sizeIndex_1_fu_793_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_sizeIndex_load_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_sizeIndex_load : STD_LOGIC_VECTOR (7 downto 0);
    signal j_1_fu_172 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal add_ln38_fu_787_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_allocacmp_j : STD_LOGIC_VECTOR (10 downto 0);
    signal buffer_30_we0_local : STD_LOGIC;
    signal trunc_ln38_1_fu_624_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_678_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_30_ce0_local : STD_LOGIC;
    signal buffer_29_we0_local : STD_LOGIC;
    signal buffer_29_ce0_local : STD_LOGIC;
    signal buffer_28_we0_local : STD_LOGIC;
    signal buffer_28_ce0_local : STD_LOGIC;
    signal buffer_27_we0_local : STD_LOGIC;
    signal buffer_27_ce0_local : STD_LOGIC;
    signal buffer_26_we0_local : STD_LOGIC;
    signal buffer_26_ce0_local : STD_LOGIC;
    signal buffer_25_we0_local : STD_LOGIC;
    signal buffer_25_ce0_local : STD_LOGIC;
    signal buffer_24_we0_local : STD_LOGIC;
    signal buffer_24_ce0_local : STD_LOGIC;
    signal buffer_23_we0_local : STD_LOGIC;
    signal buffer_23_ce0_local : STD_LOGIC;
    signal buffer_22_we0_local : STD_LOGIC;
    signal buffer_22_ce0_local : STD_LOGIC;
    signal buffer_21_we0_local : STD_LOGIC;
    signal buffer_21_ce0_local : STD_LOGIC;
    signal buffer_20_we0_local : STD_LOGIC;
    signal buffer_20_ce0_local : STD_LOGIC;
    signal buffer_19_we0_local : STD_LOGIC;
    signal buffer_19_ce0_local : STD_LOGIC;
    signal buffer_18_we0_local : STD_LOGIC;
    signal buffer_18_ce0_local : STD_LOGIC;
    signal buffer_17_we0_local : STD_LOGIC;
    signal buffer_17_ce0_local : STD_LOGIC;
    signal buffer_16_we0_local : STD_LOGIC;
    signal buffer_16_ce0_local : STD_LOGIC;
    signal buffer_15_we0_local : STD_LOGIC;
    signal buffer_15_ce0_local : STD_LOGIC;
    signal buffer_14_we0_local : STD_LOGIC;
    signal buffer_14_ce0_local : STD_LOGIC;
    signal buffer_13_we0_local : STD_LOGIC;
    signal buffer_13_ce0_local : STD_LOGIC;
    signal buffer_12_we0_local : STD_LOGIC;
    signal buffer_12_ce0_local : STD_LOGIC;
    signal buffer_11_we0_local : STD_LOGIC;
    signal buffer_11_ce0_local : STD_LOGIC;
    signal buffer_10_we0_local : STD_LOGIC;
    signal buffer_10_ce0_local : STD_LOGIC;
    signal buffer_9_we0_local : STD_LOGIC;
    signal buffer_9_ce0_local : STD_LOGIC;
    signal buffer_8_we0_local : STD_LOGIC;
    signal buffer_8_ce0_local : STD_LOGIC;
    signal buffer_7_we0_local : STD_LOGIC;
    signal buffer_7_ce0_local : STD_LOGIC;
    signal buffer_6_we0_local : STD_LOGIC;
    signal buffer_6_ce0_local : STD_LOGIC;
    signal buffer_5_we0_local : STD_LOGIC;
    signal buffer_5_ce0_local : STD_LOGIC;
    signal buffer_4_we0_local : STD_LOGIC;
    signal buffer_4_ce0_local : STD_LOGIC;
    signal buffer_3_we0_local : STD_LOGIC;
    signal buffer_3_ce0_local : STD_LOGIC;
    signal buffer_2_we0_local : STD_LOGIC;
    signal buffer_2_ce0_local : STD_LOGIC;
    signal buffer_1_we0_local : STD_LOGIC;
    signal buffer_1_ce0_local : STD_LOGIC;
    signal buffer_r_we0_local : STD_LOGIC;
    signal buffer_r_ce0_local : STD_LOGIC;
    signal buffer_31_we0_local : STD_LOGIC;
    signal buffer_31_ce0_local : STD_LOGIC;
    signal trunc_ln2_fu_628_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln37_fu_638_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_678_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal tmp_fu_678_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component sha384Accel_bitselect_1ns_128ns_7ns_1_1_1 IS
    generic (
        DATAWIDTH : INTEGER;
        ADDRWIDTH : INTEGER );
    port (
        din : IN STD_LOGIC_VECTOR (127 downto 0);
        sel : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component sha384Accel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    bitselect_1ns_128ns_7ns_1_1_1_U74 : component sha384Accel_bitselect_1ns_128ns_7ns_1_1_1
    generic map (
        DATAWIDTH => 128,
        ADDRWIDTH => 7)
    port map (
        din => size,
        sel => tmp_fu_678_p2,
        dout => tmp_fu_678_p3);

    flow_control_loop_pipe_sequential_init_U : component sha384Accel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    j_1_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if ((icmp_ln38_fu_611_p2 = ap_const_lv1_0)) then 
                    j_1_fu_172 <= add_ln38_fu_787_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_1_fu_172 <= ap_const_lv11_380;
                end if;
            end if; 
        end if;
    end process;

    sizeIndex_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if ((icmp_ln38_fu_611_p2 = ap_const_lv1_0)) then 
                    sizeIndex_fu_168 <= sizeIndex_1_fu_793_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    sizeIndex_fu_168 <= ap_const_lv8_7F;
                end if;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln38_fu_787_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j) + unsigned(ap_const_lv11_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1_pp0_stage0_iter0)
    begin
        if ((ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2)
    begin
        if (((icmp_ln38_fu_611_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, j_1_fu_172)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_j <= ap_const_lv11_380;
        else 
            ap_sig_allocacmp_j <= j_1_fu_172;
        end if; 
    end process;


    ap_sig_allocacmp_sizeIndex_load_assign_proc : process(ap_CS_fsm_state1, sizeIndex_fu_168, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_sizeIndex_load <= ap_const_lv8_7F;
        else 
            ap_sig_allocacmp_sizeIndex_load <= sizeIndex_fu_168;
        end if; 
    end process;


    ap_sig_allocacmp_sizeIndex_load_1_assign_proc : process(ap_CS_fsm_state1, sizeIndex_fu_168, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_sizeIndex_load_1 <= ap_const_lv8_7F;
        else 
            ap_sig_allocacmp_sizeIndex_load_1 <= sizeIndex_fu_168;
        end if; 
    end process;

    buffer_10_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_10_ce0 <= buffer_10_ce0_local;

    buffer_10_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_10_ce0_local <= ap_const_logic_1;
        else 
            buffer_10_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_10_d0 <= tmp_fu_678_p3;
    buffer_10_we0 <= buffer_10_we0_local;

    buffer_10_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_A) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_10_we0_local <= ap_const_logic_1;
        else 
            buffer_10_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_11_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_11_ce0 <= buffer_11_ce0_local;

    buffer_11_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_11_ce0_local <= ap_const_logic_1;
        else 
            buffer_11_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_11_d0 <= tmp_fu_678_p3;
    buffer_11_we0 <= buffer_11_we0_local;

    buffer_11_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_B) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_11_we0_local <= ap_const_logic_1;
        else 
            buffer_11_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_12_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_12_ce0 <= buffer_12_ce0_local;

    buffer_12_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_12_ce0_local <= ap_const_logic_1;
        else 
            buffer_12_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_12_d0 <= tmp_fu_678_p3;
    buffer_12_we0 <= buffer_12_we0_local;

    buffer_12_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_C) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_12_we0_local <= ap_const_logic_1;
        else 
            buffer_12_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_13_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_13_ce0 <= buffer_13_ce0_local;

    buffer_13_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_13_ce0_local <= ap_const_logic_1;
        else 
            buffer_13_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_13_d0 <= tmp_fu_678_p3;
    buffer_13_we0 <= buffer_13_we0_local;

    buffer_13_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_D) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_13_we0_local <= ap_const_logic_1;
        else 
            buffer_13_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_14_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_14_ce0 <= buffer_14_ce0_local;

    buffer_14_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_14_ce0_local <= ap_const_logic_1;
        else 
            buffer_14_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_14_d0 <= tmp_fu_678_p3;
    buffer_14_we0 <= buffer_14_we0_local;

    buffer_14_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_E) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_14_we0_local <= ap_const_logic_1;
        else 
            buffer_14_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_15_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_15_ce0 <= buffer_15_ce0_local;

    buffer_15_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_15_ce0_local <= ap_const_logic_1;
        else 
            buffer_15_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_15_d0 <= tmp_fu_678_p3;
    buffer_15_we0 <= buffer_15_we0_local;

    buffer_15_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_F) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_15_we0_local <= ap_const_logic_1;
        else 
            buffer_15_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_16_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_16_ce0 <= buffer_16_ce0_local;

    buffer_16_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_16_ce0_local <= ap_const_logic_1;
        else 
            buffer_16_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_16_d0 <= tmp_fu_678_p3;
    buffer_16_we0 <= buffer_16_we0_local;

    buffer_16_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_10) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_16_we0_local <= ap_const_logic_1;
        else 
            buffer_16_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_17_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_17_ce0 <= buffer_17_ce0_local;

    buffer_17_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_17_ce0_local <= ap_const_logic_1;
        else 
            buffer_17_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_17_d0 <= tmp_fu_678_p3;
    buffer_17_we0 <= buffer_17_we0_local;

    buffer_17_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_11) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_17_we0_local <= ap_const_logic_1;
        else 
            buffer_17_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_18_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_18_ce0 <= buffer_18_ce0_local;

    buffer_18_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_18_ce0_local <= ap_const_logic_1;
        else 
            buffer_18_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_18_d0 <= tmp_fu_678_p3;
    buffer_18_we0 <= buffer_18_we0_local;

    buffer_18_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_12) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_18_we0_local <= ap_const_logic_1;
        else 
            buffer_18_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_19_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_19_ce0 <= buffer_19_ce0_local;

    buffer_19_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_19_ce0_local <= ap_const_logic_1;
        else 
            buffer_19_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_19_d0 <= tmp_fu_678_p3;
    buffer_19_we0 <= buffer_19_we0_local;

    buffer_19_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_13) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_19_we0_local <= ap_const_logic_1;
        else 
            buffer_19_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_1_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_1_ce0 <= buffer_1_ce0_local;

    buffer_1_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_1_ce0_local <= ap_const_logic_1;
        else 
            buffer_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_1_d0 <= tmp_fu_678_p3;
    buffer_1_we0 <= buffer_1_we0_local;

    buffer_1_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_1) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_1_we0_local <= ap_const_logic_1;
        else 
            buffer_1_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_20_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_20_ce0 <= buffer_20_ce0_local;

    buffer_20_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_20_ce0_local <= ap_const_logic_1;
        else 
            buffer_20_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_20_d0 <= tmp_fu_678_p3;
    buffer_20_we0 <= buffer_20_we0_local;

    buffer_20_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_14) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_20_we0_local <= ap_const_logic_1;
        else 
            buffer_20_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_21_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_21_ce0 <= buffer_21_ce0_local;

    buffer_21_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_21_ce0_local <= ap_const_logic_1;
        else 
            buffer_21_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_21_d0 <= tmp_fu_678_p3;
    buffer_21_we0 <= buffer_21_we0_local;

    buffer_21_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_15) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_21_we0_local <= ap_const_logic_1;
        else 
            buffer_21_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_22_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_22_ce0 <= buffer_22_ce0_local;

    buffer_22_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_22_ce0_local <= ap_const_logic_1;
        else 
            buffer_22_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_22_d0 <= tmp_fu_678_p3;
    buffer_22_we0 <= buffer_22_we0_local;

    buffer_22_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_16) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_22_we0_local <= ap_const_logic_1;
        else 
            buffer_22_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_23_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_23_ce0 <= buffer_23_ce0_local;

    buffer_23_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_23_ce0_local <= ap_const_logic_1;
        else 
            buffer_23_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_23_d0 <= tmp_fu_678_p3;
    buffer_23_we0 <= buffer_23_we0_local;

    buffer_23_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_17) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_23_we0_local <= ap_const_logic_1;
        else 
            buffer_23_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_24_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_24_ce0 <= buffer_24_ce0_local;

    buffer_24_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_24_ce0_local <= ap_const_logic_1;
        else 
            buffer_24_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_24_d0 <= tmp_fu_678_p3;
    buffer_24_we0 <= buffer_24_we0_local;

    buffer_24_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_18) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_24_we0_local <= ap_const_logic_1;
        else 
            buffer_24_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_25_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_25_ce0 <= buffer_25_ce0_local;

    buffer_25_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_25_ce0_local <= ap_const_logic_1;
        else 
            buffer_25_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_25_d0 <= tmp_fu_678_p3;
    buffer_25_we0 <= buffer_25_we0_local;

    buffer_25_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_19) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_25_we0_local <= ap_const_logic_1;
        else 
            buffer_25_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_26_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_26_ce0 <= buffer_26_ce0_local;

    buffer_26_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_26_ce0_local <= ap_const_logic_1;
        else 
            buffer_26_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_26_d0 <= tmp_fu_678_p3;
    buffer_26_we0 <= buffer_26_we0_local;

    buffer_26_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_1A) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_26_we0_local <= ap_const_logic_1;
        else 
            buffer_26_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_27_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_27_ce0 <= buffer_27_ce0_local;

    buffer_27_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_27_ce0_local <= ap_const_logic_1;
        else 
            buffer_27_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_27_d0 <= tmp_fu_678_p3;
    buffer_27_we0 <= buffer_27_we0_local;

    buffer_27_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_1B) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_27_we0_local <= ap_const_logic_1;
        else 
            buffer_27_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_28_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_28_ce0 <= buffer_28_ce0_local;

    buffer_28_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_28_ce0_local <= ap_const_logic_1;
        else 
            buffer_28_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_28_d0 <= tmp_fu_678_p3;
    buffer_28_we0 <= buffer_28_we0_local;

    buffer_28_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_1C) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_28_we0_local <= ap_const_logic_1;
        else 
            buffer_28_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_29_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_29_ce0 <= buffer_29_ce0_local;

    buffer_29_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_29_ce0_local <= ap_const_logic_1;
        else 
            buffer_29_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_29_d0 <= tmp_fu_678_p3;
    buffer_29_we0 <= buffer_29_we0_local;

    buffer_29_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_1D) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_29_we0_local <= ap_const_logic_1;
        else 
            buffer_29_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_2_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_2_ce0 <= buffer_2_ce0_local;

    buffer_2_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_2_ce0_local <= ap_const_logic_1;
        else 
            buffer_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_2_d0 <= tmp_fu_678_p3;
    buffer_2_we0 <= buffer_2_we0_local;

    buffer_2_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_2) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_2_we0_local <= ap_const_logic_1;
        else 
            buffer_2_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_30_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_30_ce0 <= buffer_30_ce0_local;

    buffer_30_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_30_ce0_local <= ap_const_logic_1;
        else 
            buffer_30_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_30_d0 <= tmp_fu_678_p3;
    buffer_30_we0 <= buffer_30_we0_local;

    buffer_30_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_1E) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_30_we0_local <= ap_const_logic_1;
        else 
            buffer_30_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_31_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_31_ce0 <= buffer_31_ce0_local;

    buffer_31_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_31_ce0_local <= ap_const_logic_1;
        else 
            buffer_31_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_31_d0 <= tmp_fu_678_p3;
    buffer_31_we0 <= buffer_31_we0_local;

    buffer_31_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_1F) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_31_we0_local <= ap_const_logic_1;
        else 
            buffer_31_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_3_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_3_ce0 <= buffer_3_ce0_local;

    buffer_3_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_3_ce0_local <= ap_const_logic_1;
        else 
            buffer_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_3_d0 <= tmp_fu_678_p3;
    buffer_3_we0 <= buffer_3_we0_local;

    buffer_3_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_3) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_3_we0_local <= ap_const_logic_1;
        else 
            buffer_3_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_4_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_4_ce0 <= buffer_4_ce0_local;

    buffer_4_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_4_ce0_local <= ap_const_logic_1;
        else 
            buffer_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_4_d0 <= tmp_fu_678_p3;
    buffer_4_we0 <= buffer_4_we0_local;

    buffer_4_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_4) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_4_we0_local <= ap_const_logic_1;
        else 
            buffer_4_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_5_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_5_ce0 <= buffer_5_ce0_local;

    buffer_5_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_5_ce0_local <= ap_const_logic_1;
        else 
            buffer_5_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_5_d0 <= tmp_fu_678_p3;
    buffer_5_we0 <= buffer_5_we0_local;

    buffer_5_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_5) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_5_we0_local <= ap_const_logic_1;
        else 
            buffer_5_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_6_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_6_ce0 <= buffer_6_ce0_local;

    buffer_6_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_6_ce0_local <= ap_const_logic_1;
        else 
            buffer_6_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_6_d0 <= tmp_fu_678_p3;
    buffer_6_we0 <= buffer_6_we0_local;

    buffer_6_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_6) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_6_we0_local <= ap_const_logic_1;
        else 
            buffer_6_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_7_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_7_ce0 <= buffer_7_ce0_local;

    buffer_7_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_7_ce0_local <= ap_const_logic_1;
        else 
            buffer_7_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_7_d0 <= tmp_fu_678_p3;
    buffer_7_we0 <= buffer_7_we0_local;

    buffer_7_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_7) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_7_we0_local <= ap_const_logic_1;
        else 
            buffer_7_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_8_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_8_ce0 <= buffer_8_ce0_local;

    buffer_8_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_8_ce0_local <= ap_const_logic_1;
        else 
            buffer_8_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_8_d0 <= tmp_fu_678_p3;
    buffer_8_we0 <= buffer_8_we0_local;

    buffer_8_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_8) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_8_we0_local <= ap_const_logic_1;
        else 
            buffer_8_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_9_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_9_ce0 <= buffer_9_ce0_local;

    buffer_9_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_9_ce0_local <= ap_const_logic_1;
        else 
            buffer_9_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_9_d0 <= tmp_fu_678_p3;
    buffer_9_we0 <= buffer_9_we0_local;

    buffer_9_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_9) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_9_we0_local <= ap_const_logic_1;
        else 
            buffer_9_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_r_address0 <= zext_ln37_fu_642_p1(5 - 1 downto 0);
    buffer_r_ce0 <= buffer_r_ce0_local;

    buffer_r_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_r_ce0_local <= ap_const_logic_1;
        else 
            buffer_r_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buffer_r_d0 <= tmp_fu_678_p3;
    buffer_r_we0 <= buffer_r_we0_local;

    buffer_r_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln38_fu_611_p2, trunc_ln38_1_fu_624_p1)
    begin
        if (((trunc_ln38_1_fu_624_p1 = ap_const_lv5_0) and (icmp_ln38_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_r_we0_local <= ap_const_logic_1;
        else 
            buffer_r_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln38_fu_611_p2 <= "1" when (ap_sig_allocacmp_j = ap_const_lv11_400) else "0";
        sext_ln37_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_fu_628_p4),5));

    sizeIndex_1_fu_793_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_sizeIndex_load) + unsigned(ap_const_lv8_FF));
    tmp_fu_678_p2 <= ap_sig_allocacmp_sizeIndex_load_1(7 - 1 downto 0);
    trunc_ln2_fu_628_p4 <= ap_sig_allocacmp_j(7 downto 5);
    trunc_ln38_1_fu_624_p1 <= ap_sig_allocacmp_j(5 - 1 downto 0);
    zext_ln37_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln37_fu_638_p1),64));
end behav;
