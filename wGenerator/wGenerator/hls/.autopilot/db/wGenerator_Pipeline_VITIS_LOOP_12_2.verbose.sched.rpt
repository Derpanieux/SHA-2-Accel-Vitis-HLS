

================================================================
== Vitis HLS Report for 'wGenerator_Pipeline_VITIS_LOOP_12_2'
================================================================
* Date:           Wed Jul 16 02:45:14 2025

* Version:        2025.1 (Build 6135595 on May 21 2025)
* Project:        wGenerator
* Solution:       hls (Vivado IP Flow Target)
* Product family: aspartan7
* Target device:  xa7s6-cpga196-2I


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.329 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |      148|      148|  1.480 us|  1.480 us|  147|  147|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_12_2  |      146|      146|         6|          3|          1|    48|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 3, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 3, D = 6, States = { 1 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.29>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i_1 = alloca i32 1" [wGenerator.cpp:12]   --->   Operation 9 'alloca' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %wout, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (1.29ns)   --->   "%store_ln12 = store i7 16, i7 %i_1" [wGenerator.cpp:12]   --->   Operation 11 'store' 'store_ln12' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc36"   --->   Operation 12 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 4.37>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%i = load i7 %i_1" [wGenerator.cpp:12]   --->   Operation 13 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (1.61ns)   --->   "%icmp_ln12 = icmp_eq  i7 %i, i7 64" [wGenerator.cpp:12]   --->   Operation 14 'icmp' 'icmp_ln12' <Predicate = true> <Delay = 1.61> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.61> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln12 = br i1 %icmp_ln12, void %for.inc36.split, void %for.end38.exitStub" [wGenerator.cpp:12]   --->   Operation 15 'br' 'br_ln12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%trunc_ln12 = trunc i7 %i" [wGenerator.cpp:12]   --->   Operation 16 'trunc' 'trunc_ln12' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (1.60ns)   --->   "%add_ln13_1 = add i6 %trunc_ln12, i6 48" [wGenerator.cpp:13]   --->   Operation 17 'add' 'add_ln13_1' <Predicate = (!icmp_ln12)> <Delay = 1.60> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln27 = zext i6 %add_ln13_1" [../functions256.cpp:27->wGenerator.cpp:13]   --->   Operation 18 'zext' 'zext_ln27' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (1.60ns)   --->   "%add_ln16 = add i6 %trunc_ln12, i6 57" [wGenerator.cpp:16]   --->   Operation 19 'add' 'add_ln16' <Predicate = (!icmp_ln12)> <Delay = 1.60> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln16 = zext i6 %add_ln16" [wGenerator.cpp:16]   --->   Operation 20 'zext' 'zext_ln16' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%wout_addr_2 = getelementptr i32 %wout, i64 0, i64 %zext_ln16" [wGenerator.cpp:16]   --->   Operation 21 'getelementptr' 'wout_addr_2' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_2 : Operation 22 [2/2] (2.77ns)   --->   "%wout_load_2 = load i6 %wout_addr_2" [wGenerator.cpp:16]   --->   Operation 22 'load' 'wout_load_2' <Predicate = (!icmp_ln12)> <Delay = 2.77> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%wout_addr_3 = getelementptr i32 %wout, i64 0, i64 %zext_ln27" [wGenerator.cpp:16]   --->   Operation 23 'getelementptr' 'wout_addr_3' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_2 : Operation 24 [2/2] (2.77ns)   --->   "%wout_load_3 = load i6 %wout_addr_3" [wGenerator.cpp:16]   --->   Operation 24 'load' 'wout_load_3' <Predicate = (!icmp_ln12)> <Delay = 2.77> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 25 [1/1] (1.61ns)   --->   "%add_ln12 = add i7 %i, i7 1" [wGenerator.cpp:12]   --->   Operation 25 'add' 'add_ln12' <Predicate = (!icmp_ln12)> <Delay = 1.61> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.61> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (1.29ns)   --->   "%store_ln12 = store i7 %add_ln12, i7 %i_1" [wGenerator.cpp:12]   --->   Operation 26 'store' 'store_ln12' <Predicate = (!icmp_ln12)> <Delay = 1.29>

State 3 <SV = 2> <Delay = 2.77>
ST_3 : Operation 27 [1/2] ( I:2.77ns O:2.77ns )   --->   "%wout_load_2 = load i6 %wout_addr_2" [wGenerator.cpp:16]   --->   Operation 27 'load' 'wout_load_2' <Predicate = (!icmp_ln12)> <Delay = 2.77> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 28 [1/2] ( I:2.77ns O:2.77ns )   --->   "%wout_load_3 = load i6 %wout_addr_3" [wGenerator.cpp:16]   --->   Operation 28 'load' 'wout_load_3' <Predicate = (!icmp_ln12)> <Delay = 2.77> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 69 [1/1] (1.29ns)   --->   "%ret_ln0 = ret"   --->   Operation 69 'ret' 'ret_ln0' <Predicate = (icmp_ln12)> <Delay = 1.29>

State 4 <SV = 3> <Delay = 4.37>
ST_4 : Operation 29 [1/1] (1.60ns)   --->   "%add_ln13 = add i6 %trunc_ln12, i6 49" [wGenerator.cpp:13]   --->   Operation 29 'add' 'add_ln13' <Predicate = true> <Delay = 1.60> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i6 %add_ln13" [wGenerator.cpp:13]   --->   Operation 30 'zext' 'zext_ln13' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 31 [1/1] (0.00ns)   --->   "%wout_addr = getelementptr i32 %wout, i64 0, i64 %zext_ln13" [../functions256.cpp:27->wGenerator.cpp:13]   --->   Operation 31 'getelementptr' 'wout_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 32 [2/2] (2.77ns)   --->   "%wout_load = load i6 %wout_addr" [../functions256.cpp:27->wGenerator.cpp:13]   --->   Operation 32 'load' 'wout_load' <Predicate = true> <Delay = 2.77> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_4 : Operation 33 [1/1] (1.60ns)   --->   "%add_ln14 = add i6 %trunc_ln12, i6 62" [wGenerator.cpp:14]   --->   Operation 33 'add' 'add_ln14' <Predicate = true> <Delay = 1.60> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln37 = zext i6 %add_ln14" [../functions256.cpp:37->wGenerator.cpp:14]   --->   Operation 34 'zext' 'zext_ln37' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "%wout_addr_1 = getelementptr i32 %wout, i64 0, i64 %zext_ln37" [../functions256.cpp:37->wGenerator.cpp:14]   --->   Operation 35 'getelementptr' 'wout_addr_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 36 [2/2] (2.77ns)   --->   "%wout_load_1 = load i6 %wout_addr_1" [../functions256.cpp:37->wGenerator.cpp:14]   --->   Operation 36 'load' 'wout_load_1' <Predicate = true> <Delay = 2.77> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>

State 5 <SV = 4> <Delay = 4.91>
ST_5 : Operation 37 [1/2] ( I:2.77ns O:2.77ns )   --->   "%wout_load = load i6 %wout_addr" [../functions256.cpp:27->wGenerator.cpp:13]   --->   Operation 37 'load' 'wout_load' <Predicate = true> <Delay = 2.77> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_5 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%lshr_ln = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %wout_load, i32 7, i32 31" [../functions256.cpp:27->wGenerator.cpp:13]   --->   Operation 38 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%trunc_ln27 = trunc i32 %wout_load" [../functions256.cpp:27->wGenerator.cpp:13]   --->   Operation 39 'trunc' 'trunc_ln27' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%lshr_ln1 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %wout_load, i32 18, i32 31" [../functions256.cpp:28->wGenerator.cpp:13]   --->   Operation 40 'partselect' 'lshr_ln1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%trunc_ln28 = trunc i32 %wout_load" [../functions256.cpp:28->wGenerator.cpp:13]   --->   Operation 41 'trunc' 'trunc_ln28' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%shr3 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %wout_load, i32 3, i32 31" [../functions256.cpp:29->wGenerator.cpp:13]   --->   Operation 42 'partselect' 'shr3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%zext_ln29 = zext i29 %shr3" [../functions256.cpp:29->wGenerator.cpp:13]   --->   Operation 43 'zext' 'zext_ln29' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 44 [1/2] ( I:2.77ns O:2.77ns )   --->   "%wout_load_1 = load i6 %wout_addr_1" [../functions256.cpp:37->wGenerator.cpp:14]   --->   Operation 44 'load' 'wout_load_1' <Predicate = true> <Delay = 2.77> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_5 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%lshr_ln2 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %wout_load_1, i32 17, i32 31" [../functions256.cpp:37->wGenerator.cpp:14]   --->   Operation 45 'partselect' 'lshr_ln2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%trunc_ln37 = trunc i32 %wout_load_1" [../functions256.cpp:37->wGenerator.cpp:14]   --->   Operation 46 'trunc' 'trunc_ln37' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%lshr_ln3 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %wout_load_1, i32 19, i32 31" [../functions256.cpp:38->wGenerator.cpp:14]   --->   Operation 47 'partselect' 'lshr_ln3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%trunc_ln38 = trunc i32 %wout_load_1" [../functions256.cpp:38->wGenerator.cpp:14]   --->   Operation 48 'trunc' 'trunc_ln38' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%shr10 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %wout_load_1, i32 10, i32 31" [../functions256.cpp:39->wGenerator.cpp:14]   --->   Operation 49 'partselect' 'shr10' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%zext_ln39 = zext i22 %shr10" [../functions256.cpp:39->wGenerator.cpp:14]   --->   Operation 50 'zext' 'zext_ln39' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%or_ln = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln38, i13 %lshr_ln3" [wGenerator.cpp:16]   --->   Operation 51 'bitconcatenate' 'or_ln' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%or_ln16_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln37, i15 %lshr_ln2" [wGenerator.cpp:16]   --->   Operation 52 'bitconcatenate' 'or_ln16_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%or_ln16_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln28, i14 %lshr_ln1" [wGenerator.cpp:16]   --->   Operation 53 'bitconcatenate' 'or_ln16_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%xor_ln16 = xor i32 %zext_ln39, i32 %or_ln16_1" [wGenerator.cpp:16]   --->   Operation 54 'xor' 'xor_ln16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%xor_ln16_1 = xor i32 %xor_ln16, i32 %or_ln" [wGenerator.cpp:16]   --->   Operation 55 'xor' 'xor_ln16_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%or_ln16_3 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln27, i25 %lshr_ln" [wGenerator.cpp:16]   --->   Operation 56 'bitconcatenate' 'or_ln16_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%xor_ln16_2 = xor i32 %or_ln16_3, i32 %zext_ln29" [wGenerator.cpp:16]   --->   Operation 57 'xor' 'xor_ln16_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node add_ln16_2)   --->   "%xor_ln16_3 = xor i32 %xor_ln16_2, i32 %or_ln16_2" [wGenerator.cpp:16]   --->   Operation 58 'xor' 'xor_ln16_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 59 [1/1] (2.14ns) (out node of the LUT)   --->   "%add_ln16_2 = add i32 %xor_ln16_3, i32 %xor_ln16_1" [wGenerator.cpp:16]   --->   Operation 59 'add' 'add_ln16_2' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.32>
ST_6 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln12 = zext i7 %i" [wGenerator.cpp:12]   --->   Operation 60 'zext' 'zext_ln12' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 61 [1/1] (0.00ns)   --->   "%specpipeline_ln12 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [wGenerator.cpp:12]   --->   Operation 61 'specpipeline' 'specpipeline_ln12' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 62 [1/1] (0.00ns)   --->   "%speclooptripcount_ln12 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 48, i64 48, i64 48" [wGenerator.cpp:12]   --->   Operation 62 'speclooptripcount' 'speclooptripcount_ln12' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "%specloopname_ln12 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [wGenerator.cpp:12]   --->   Operation 63 'specloopname' 'specloopname_ln12' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 64 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_1 = add i32 %wout_load_2, i32 %wout_load_3" [wGenerator.cpp:16]   --->   Operation 64 'add' 'add_ln16_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.77> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 65 [1/1] (3.55ns) (root node of TernaryAdder)   --->   "%add_ln16_3 = add i32 %add_ln16_2, i32 %add_ln16_1" [wGenerator.cpp:16]   --->   Operation 65 'add' 'add_ln16_3' <Predicate = true> <Delay = 3.55> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.77> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%wout_addr_4 = getelementptr i32 %wout, i64 0, i64 %zext_ln12" [wGenerator.cpp:16]   --->   Operation 66 'getelementptr' 'wout_addr_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 67 [1/1] ( I:2.77ns O:2.77ns )   --->   "%store_ln16 = store i32 %add_ln16_3, i6 %wout_addr_4" [wGenerator.cpp:16]   --->   Operation 67 'store' 'store_ln16' <Predicate = true> <Delay = 2.77> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_6 : Operation 68 [1/1] (0.00ns)   --->   "%br_ln12 = br void %for.inc36" [wGenerator.cpp:12]   --->   Operation 68 'br' 'br_ln12' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.294ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln12', wGenerator.cpp:12) of constant 16 on local variable 'i', wGenerator.cpp:12 [4]  (1.294 ns)

 <State 2>: 4.372ns
The critical path consists of the following:
	'load' operation 7 bit ('i', wGenerator.cpp:12) on local variable 'i', wGenerator.cpp:12 [7]  (0.000 ns)
	'add' operation 6 bit ('add_ln16', wGenerator.cpp:16) [38]  (1.601 ns)
	'getelementptr' operation 6 bit ('wout_addr_2', wGenerator.cpp:16) [40]  (0.000 ns)
	'load' operation 32 bit ('wout_load_2', wGenerator.cpp:16) on array 'wout' [41]  (2.771 ns)

 <State 3>: 2.771ns
The critical path consists of the following:
	'load' operation 32 bit ('wout_load_2', wGenerator.cpp:16) on array 'wout' [41]  (2.771 ns)

 <State 4>: 4.372ns
The critical path consists of the following:
	'add' operation 6 bit ('add_ln13', wGenerator.cpp:13) [16]  (1.601 ns)
	'getelementptr' operation 6 bit ('wout_addr', ../functions256.cpp:27->wGenerator.cpp:13) [20]  (0.000 ns)
	'load' operation 32 bit ('wout_load', ../functions256.cpp:27->wGenerator.cpp:13) on array 'wout' [21]  (2.771 ns)

 <State 5>: 4.916ns
The critical path consists of the following:
	'load' operation 32 bit ('wout_load', ../functions256.cpp:27->wGenerator.cpp:13) on array 'wout' [21]  (2.771 ns)
	'xor' operation 32 bit ('xor_ln16_3', wGenerator.cpp:16) [51]  (0.000 ns)
	'add' operation 32 bit ('add_ln16_2', wGenerator.cpp:16) [53]  (2.145 ns)

 <State 6>: 6.329ns
The critical path consists of the following:
	'add' operation 32 bit ('add_ln16_1', wGenerator.cpp:16) [52]  (0.000 ns)
	'add' operation 32 bit ('add_ln16_3', wGenerator.cpp:16) [54]  (3.558 ns)
	'store' operation 0 bit ('store_ln16', wGenerator.cpp:16) of variable 'add_ln16_3', wGenerator.cpp:16 on array 'wout' [56]  (2.771 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
